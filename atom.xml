<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Soto</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://p709723778.gitee.io/"/>
  <updated>2021-09-11T10:24:25.144Z</updated>
  <id>http://p709723778.gitee.io/</id>
  
  <author>
    <name>Soto Pu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter ~ Text 同时添加中划线和下划线</title>
    <link href="http://p709723778.gitee.io/2021/09/01/Flutter-Text-%E5%90%8C%E6%97%B6%E6%B7%BB%E5%8A%A0%E4%B8%AD%E5%88%92%E7%BA%BF%E5%92%8C%E4%B8%8B%E5%88%92%E7%BA%BF/"/>
    <id>http://p709723778.gitee.io/2021/09/01/Flutter-Text-%E5%90%8C%E6%97%B6%E6%B7%BB%E5%8A%A0%E4%B8%AD%E5%88%92%E7%BA%BF%E5%92%8C%E4%B8%8B%E5%88%92%E7%BA%BF/</id>
    <published>2021-09-01T20:25:59.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/2021/09/01/Flutter-Text-%E5%90%8C%E6%97%B6%E6%B7%BB%E5%8A%A0%E4%B8%AD%E5%88%92%E7%BA%BF%E5%92%8C%E4%B8%8B%E5%88%92%E7%BA%BF/1.png&quot; class=&quot;&quot; title=&quot;示例图&quot;&gt;
    
    </summary>
    
    
      <category term="Flutter开发" scheme="http://p709723778.gitee.io/categories/Flutter%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Dart" scheme="http://p709723778.gitee.io/tags/Dart/"/>
    
      <category term="Flutter" scheme="http://p709723778.gitee.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter ~ Stack 组件</title>
    <link href="http://p709723778.gitee.io/2021/01/04/Flutter-Stack%20%E7%BB%84%E4%BB%B6/"/>
    <id>http://p709723778.gitee.io/2021/01/04/Flutter-Stack%20%E7%BB%84%E4%BB%B6/</id>
    <published>2021-01-04T14:33:49.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;层叠布局和Web中的绝对定位、Android中的Frame布局是相似的，子组件可以根据距父容器四个角的位置来确定自身的位置。绝对定位允许子组件堆叠起来（按照代码中声明的顺序）。Flutter中使用&lt;code&gt;Stack&lt;/code&gt;和&lt;code&gt;Positioned&lt;/code&gt;这两个组件来配合实现绝对定位。&lt;code&gt;Stack&lt;/code&gt;允许子组件堆叠，而&lt;code&gt;Positioned&lt;/code&gt;用于根据&lt;code&gt;Stack&lt;/code&gt;的四个角来确定子组件的位置。&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// &lt;span class=&quot;markdown&quot;&gt;Creates a stack layout widget.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;///&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// &lt;span class=&quot;markdown&quot;&gt;By default, the non-positioned children of the stack are aligned by their&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// &lt;span class=&quot;markdown&quot;&gt;top left corners.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Stack(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Key? key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.alignment = AlignmentDirectional.topStart,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.textDirection,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fit = StackFit.loose,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@Deprecated&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;Use clipBehavior instead. See the migration guide in flutter.dev/go/clip-behavior. &#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;This feature was deprecated after v1.22.0-12.0.pre.&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.overflow = Overflow.clip,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clipBehavior = Clip.hardEdge,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;Widget&amp;gt; children = &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;lt;Widget&amp;gt;[],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;alignment&lt;/code&gt;：此参数决定如何去对齐没有定位（没有使用&lt;code&gt;Positioned&lt;/code&gt;）或部分定位的子组件。所谓部分定位，在这里&lt;strong&gt;特指没有在某一个轴上定位：&lt;/strong&gt;&lt;code&gt;left&lt;/code&gt;、&lt;code&gt;right&lt;/code&gt;为横轴，&lt;code&gt;top&lt;/code&gt;、&lt;code&gt;bottom&lt;/code&gt;为纵轴，只要包含某个轴上的一个定位属性就算在该轴上有定位。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;textDirection&lt;/code&gt;：和&lt;code&gt;Row&lt;/code&gt;、&lt;code&gt;Wrap&lt;/code&gt;的&lt;code&gt;textDirection&lt;/code&gt;功能一样，都用于确定&lt;code&gt;alignment&lt;/code&gt;对齐的参考系，即：&lt;code&gt;textDirection&lt;/code&gt;的值为&lt;code&gt;TextDirection.ltr&lt;/code&gt;，则&lt;code&gt;alignment&lt;/code&gt;的&lt;code&gt;start&lt;/code&gt;代表左，&lt;code&gt;end&lt;/code&gt;代表右，即&lt;code&gt;从左往右&lt;/code&gt;的顺序；&lt;code&gt;textDirection&lt;/code&gt;的值为&lt;code&gt;TextDirection.rtl&lt;/code&gt;，则alignment的&lt;code&gt;start&lt;/code&gt;代表右，&lt;code&gt;end&lt;/code&gt;代表左，即&lt;code&gt;从右往左&lt;/code&gt;的顺序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;fit&lt;/code&gt;：此参数用于确定&lt;strong&gt;没有定位&lt;/strong&gt;的子组件如何去适应&lt;code&gt;Stack&lt;/code&gt;的大小。&lt;code&gt;StackFit.loose&lt;/code&gt;表示使用子组件的大小，&lt;code&gt;StackFit.expand&lt;/code&gt;表示扩伸到&lt;code&gt;Stack&lt;/code&gt;的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;overflow&lt;/code&gt;：此属性已经废弃,改换为clipBehavior。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;clipBehavior&lt;/code&gt;：此属性决定裁剪方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;strong&gt;clipBehavior属性值&lt;/strong&gt;&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;clipBehavior: Clip.none&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;不裁剪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;clipBehavior: Clip.hardEdge&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;裁剪但不应用抗锯齿，裁剪速度比none模式慢一点，但比其他方式快。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;clipBehavior: Clip.antiAlias&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;裁剪而且抗锯齿，以实现更平滑的外观。裁剪速度比antiAliasWithSaveLayer快，比hardEdge慢。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;clipBehavior: Clip.antiAliasWithSaveLayer&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;带有抗锯齿的剪辑，并在剪辑之后立即保存saveLayer。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&quot;初探Stack组件的使用&quot;&gt;&lt;a href=&quot;#初探Stack组件的使用&quot; class=&quot;headerlink&quot; title=&quot;初探Stack组件的使用&quot;&gt;&lt;/a&gt;初探Stack组件的使用&lt;/h3&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;package:flutter/material.dart&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  runApp(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MaterialApp(title: &lt;span class=&quot;string&quot;&gt;&#39;Stack Demo&#39;&lt;/span&gt;, home: StackDemo()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StackDemo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StatelessWidget&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;@override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Widget build(BuildContext context) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Scaffold(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      appBar: AppBar(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title: &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Text(&lt;span class=&quot;string&quot;&gt;&#39;Stack 组件&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      body: Stack(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        children: &amp;lt;Widget&amp;gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Container(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: Colors.red,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Container(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: Colors.blue,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Container(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            color: Colors.green,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的代码Stack做为根布局，叠加的方式展示3个组件，第一个组件比较大100&lt;em&gt;100，第二个组件稍微小点90**&lt;/em&gt;90&lt;/p&gt;
&lt;p&gt;，第三个组件最小80*80，显示的方式是能看见第一个和第二个组件的部分区域，第三个组件是能全部显示出来&lt;/p&gt;
&lt;img src=&quot;/2021/01/04/Flutter-Stack%20%E7%BB%84%E4%BB%B6/1.png&quot; class=&quot;&quot; title=&quot;示例图&quot;&gt;
    
    </summary>
    
    
      <category term="Flutter开发" scheme="http://p709723778.gitee.io/categories/Flutter%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Dart" scheme="http://p709723778.gitee.io/tags/Dart/"/>
    
      <category term="Flutter" scheme="http://p709723778.gitee.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter ~ 小数取整的多种实现方式 &amp; 保留小数点后 n 位</title>
    <link href="http://p709723778.gitee.io/2020/12/04/Flutter-%E5%B0%8F%E6%95%B0%E5%8F%96%E6%95%B4%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-%E4%BF%9D%E7%95%99%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E-n-%E4%BD%8D/"/>
    <id>http://p709723778.gitee.io/2020/12/04/Flutter-%E5%B0%8F%E6%95%B0%E5%8F%96%E6%95%B4%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F-%E4%BF%9D%E7%95%99%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E-n-%E4%BD%8D/</id>
    <published>2020-12-04T18:05:01.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-舍弃小数部分（取整）&quot;&gt;&lt;a href=&quot;#1-舍弃小数部分（取整）&quot; class=&quot;headerlink&quot; title=&quot;1. 舍弃小数部分（取整）&quot;&gt;&lt;/a&gt;1. 舍弃小数部分（取整）&lt;/h2&gt;&lt;p&gt;首先我们来看如何只保留整数位，这里有很多方法可以实现：&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;double&lt;/span&gt; price = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//原始值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price = &lt;span class=&quot;subst&quot;&gt;$price&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//舍弃当前变量的小数部分，结果为 33。返回值为 int 类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price.truncate() = &lt;span class=&quot;subst&quot;&gt;$&amp;#123;price.truncate()&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//舍弃当前变量的小数部分，浮点数形式表示，结果为 33.0。返回值为 double。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price.truncateToDouble() = &lt;span class=&quot;subst&quot;&gt;$&amp;#123;price.truncateToDouble()&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//舍弃当前变量的小数部分，结果为 33。返回值为 int 类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price.toInt() = &lt;span class=&quot;subst&quot;&gt;$&amp;#123;price.toInt()&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//小数部分向上进位，结果为 34。返回值为 int 类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price.ceil() = &lt;span class=&quot;subst&quot;&gt;$&amp;#123;price.ceil()&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//小数部分向上进位，结果为 34.0。返回值为 double。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price.ceilToDouble() = &lt;span class=&quot;subst&quot;&gt;$&amp;#123;price.ceilToDouble()&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//当前变量四舍五入后取整，结果为 33。返回值为 int 类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price.round() = &lt;span class=&quot;subst&quot;&gt;$&amp;#123;price.round()&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//当前变量四舍五入后取整，结果为 33.0。返回值为 double 类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;price.roundToDouble() = &lt;span class=&quot;subst&quot;&gt;$&amp;#123;price.roundToDouble()&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//取整: 忽略小数位,返回整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; number = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ~/ &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;number = &lt;span class=&quot;subst&quot;&gt;$number&lt;/span&gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Flutter开发" scheme="http://p709723778.gitee.io/categories/Flutter%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Dart" scheme="http://p709723778.gitee.io/tags/Dart/"/>
    
      <category term="Flutter" scheme="http://p709723778.gitee.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter ~ Dart运算符</title>
    <link href="http://p709723778.gitee.io/2020/12/02/Flutter-Dart%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://p709723778.gitee.io/2020/12/02/Flutter-Dart%E8%BF%90%E7%AE%97%E7%AC%A6/</id>
    <published>2020-12-02T20:30:05.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-Dart在线编辑器&quot;&gt;&lt;a href=&quot;#1-Dart在线编辑器&quot; class=&quot;headerlink&quot; title=&quot;1.Dart在线编辑器&quot;&gt;&lt;/a&gt;1.Dart在线编辑器&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://repl.it/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Repl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dart.dev/tutorials/web/get-started&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Dart官方在线编辑器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Dart 运算符和绝大部分编程语言的运算符一样，所以你可以用熟悉的方式去执行程序代码运算。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;2-运算符&quot;&gt;&lt;a href=&quot;#2-运算符&quot; class=&quot;headerlink&quot; title=&quot;2.运算符&quot;&gt;&lt;/a&gt;2.运算符&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;?. 运算符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;它的意思是左边如果为空返回 null，否则返回右边的值。&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Animal animal = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Animal(&lt;span class=&quot;string&quot;&gt;&#39;cat&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Animal empty = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//animal 非空，返回 animal.name 的值 cat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(animal?.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//empty 为空，返回 null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(empty?.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//animal 非空，可以直接访问 animal.name 的值 cat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(animal.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//empty 为空，抛出异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(empty.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Animal&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Animal(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Flutter开发" scheme="http://p709723778.gitee.io/categories/Flutter%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Dart" scheme="http://p709723778.gitee.io/tags/Dart/"/>
    
      <category term="Flutter" scheme="http://p709723778.gitee.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Flutter ~ Dart语法特性</title>
    <link href="http://p709723778.gitee.io/2020/11/12/Flutter-Dart%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/"/>
    <id>http://p709723778.gitee.io/2020/11/12/Flutter-Dart%E8%AF%AD%E6%B3%95%E7%89%B9%E6%80%A7/</id>
    <published>2020-11-12T11:23:55.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-Dart-的基本语法&quot;&gt;&lt;a href=&quot;#一-Dart-的基本语法&quot; class=&quot;headerlink&quot; title=&quot;一. Dart 的基本语法&quot;&gt;&lt;/a&gt;一. Dart 的基本语法&lt;/h2&gt;&lt;h3 id=&quot;1、程序入口&quot;&gt;&lt;a href=&quot;#1、程序入口&quot; class=&quot;headerlink&quot; title=&quot;1、程序入口&quot;&gt;&lt;/a&gt;1、程序入口&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Dart 的入口也是 main 函数，且没有返回值。&lt;/li&gt;
&lt;li&gt;传递给 main 的命令行参数，会存放在 &lt;code&gt;List&amp;lt;String&amp;gt; args&lt;/code&gt; 中。&lt;/li&gt;
&lt;li&gt;定义字符串可以使用单引号或双引号。&lt;/li&gt;
&lt;li&gt;每行语句必须使用分号结尾。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;main(&lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2、声明变量&quot;&gt;&lt;a href=&quot;#2、声明变量&quot; class=&quot;headerlink&quot; title=&quot;2、声明变量&quot;&gt;&lt;/a&gt;2、声明变量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;明确声明：变量类型 变量名称 = 赋值;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类型推导：&lt;code&gt;var / dynamic / const / final&lt;/code&gt; 变量名称 = 赋值;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter开发" scheme="http://p709723778.gitee.io/categories/Flutter%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Dart" scheme="http://p709723778.gitee.io/tags/Dart/"/>
    
      <category term="Flutter" scheme="http://p709723778.gitee.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ iOS14 广告标识IDFA</title>
    <link href="http://p709723778.gitee.io/2020/07/23/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-iOS14-%E5%B9%BF%E5%91%8A%E6%A0%87%E8%AF%86IDFA/"/>
    <id>http://p709723778.gitee.io/2020/07/23/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-iOS14-%E5%B9%BF%E5%91%8A%E6%A0%87%E8%AF%86IDFA/</id>
    <published>2020-07-23T16:53:32.000Z</published>
    <updated>2021-09-11T10:24:25.152Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;用手机自带Safari 打开 &lt;a href=&quot;/download/iOS_14_DP_Beta_Profile.mobileconfig&quot;&gt;iOS14_Beta_Profile&lt;/a&gt; 可以进行下载描述文件安装体验iOS14系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;适配方案&quot;&gt;&lt;a href=&quot;#适配方案&quot; class=&quot;headerlink&quot; title=&quot;适配方案:&quot;&gt;&lt;/a&gt;适配方案:&lt;/h4&gt;&lt;p&gt;1.需要在info.plist 中添加 &lt;code&gt;NSUserTrackingUsageDescription&lt;/code&gt; 对应的描述文案&lt;/p&gt;
&lt;p&gt;2.iOS14下新增了IDFA 权限申请 API 添加申请权限的代码,代码如下:&lt;/p&gt;
&lt;p&gt;​    首先要导入系统框架&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@import&lt;/span&gt; AdSupport;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@import&lt;/span&gt; AppTrackingTransparency;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;​    适配代码&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)idfa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __block &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *advertisingId = &lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (@available(iOS &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, *)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ATTrackingManager.trackingAuthorizationStatus != ATTrackingManagerAuthorizationStatusAuthorized) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [ATTrackingManager requestTrackingAuthorizationWithCompletionHandler:^(ATTrackingManagerAuthorizationStatus status) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == ATTrackingManagerAuthorizationStatusAuthorized) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;用户选择了同意授权IDFA权限 %@&quot;&lt;/span&gt;, advertisingId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    advertisingId = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;用户选择了拒绝授权IDFA权限&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            advertisingId = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ios14以下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([[ASIdentifierManager sharedManager] isAdvertisingTrackingEnabled]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            advertisingId = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;请在设置 -&amp;gt; 隐私 -&amp;gt; 广告 -&amp;gt; 限制广告跟踪打开广告跟踪功能&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; advertisingId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
      <category term="IDFA" scheme="http://p709723778.gitee.io/tags/IDFA/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ dSYM 文件结构</title>
    <link href="http://p709723778.gitee.io/2020/04/17/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-dSYM-%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/"/>
    <id>http://p709723778.gitee.io/2020/04/17/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-dSYM-%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</id>
    <published>2020-04-17T19:26:01.000Z</published>
    <updated>2021-09-11T10:24:25.152Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-获取Crash文件&quot;&gt;&lt;a href=&quot;#1-获取Crash文件&quot; class=&quot;headerlink&quot; title=&quot;1. 获取Crash文件&quot;&gt;&lt;/a&gt;1. 获取Crash文件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;iPhone设备上获取: 设置 -&amp;gt; 隐私 -&amp;gt; 分析与改进 -&amp;gt; 分析数据 -&amp;gt; 找到对应应用的.ips文件(获取到的 .ips 改后缀为 .crash 即可)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Xcode 上查看: Xcode -&amp;gt; Window -&amp;gt; Devices and Simulators -&amp;gt; 选中Crash的设备 -&amp;gt; View Device Logs -&amp;gt; This Device -&amp;gt; 找到对应的进程crash文件 -&amp;gt; 右键Export Log -&amp;gt; 保存到需要保存的位置&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
      <category term="dSYM" scheme="http://p709723778.gitee.io/tags/dSYM/"/>
    
      <category term="Crash" scheme="http://p709723778.gitee.io/tags/Crash/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ App Store Connect Operation Error 集合</title>
    <link href="http://p709723778.gitee.io/2019/12/24/App-Store-Connect-Operation-Error-%E9%9B%86%E5%90%88/"/>
    <id>http://p709723778.gitee.io/2019/12/24/App-Store-Connect-Operation-Error-%E9%9B%86%E5%90%88/</id>
    <published>2019-12-24T19:10:52.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-、常用的上传工具&quot;&gt;&lt;a href=&quot;#一-、常用的上传工具&quot; class=&quot;headerlink&quot; title=&quot;一 、常用的上传工具&quot;&gt;&lt;/a&gt;一 、常用的上传工具&lt;/h3&gt;&lt;h6 id=&quot;1-Transporter-GUI工具-推荐&quot;&gt;&lt;a href=&quot;#1-Transporter-GUI工具-推荐&quot; class=&quot;headerlink&quot; title=&quot;1. Transporter GUI工具 推荐&quot;&gt;&lt;/a&gt;1. Transporter GUI工具 推荐&lt;/h6&gt;&lt;p&gt;使用说明: &lt;a href=&quot;https://help.apple.com/itc/transporter/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://help.apple.com/itc/transporter/&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&quot;2-iTMSTransporter-macOS-Windows-Linux都有提供-推荐&quot;&gt;&lt;a href=&quot;#2-iTMSTransporter-macOS-Windows-Linux都有提供-推荐&quot; class=&quot;headerlink&quot; title=&quot;2. iTMSTransporter (macOS / Windows / Linux都有提供) 推荐&quot;&gt;&lt;/a&gt;2. iTMSTransporter (macOS / Windows / Linux都有提供) 推荐&lt;/h6&gt;&lt;p&gt;使用说明: &lt;a href=&quot;https://help.apple.com/itc/transporteruserguide/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://help.apple.com/itc/transporteruserguide/&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&quot;3-Application-Loader-集成在Xcode内部，但是该工具已经被苹果弱化-不推荐&quot;&gt;&lt;a href=&quot;#3-Application-Loader-集成在Xcode内部，但是该工具已经被苹果弱化-不推荐&quot; class=&quot;headerlink&quot; title=&quot;3. Application Loader (集成在Xcode内部，但是该工具已经被苹果弱化) ~   不推荐&quot;&gt;&lt;/a&gt;3. &lt;del&gt;Application Loader (集成在Xcode内部，但是该工具已经被苹果弱化) ~&lt;/del&gt;   不推荐&lt;/h6&gt;&lt;p&gt;使用说明: &lt;a href=&quot;https://help.apple.com/itc/apploader/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://help.apple.com/itc/apploader/&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ NSUUID , CFUUID 唯一标识符</title>
    <link href="http://p709723778.gitee.io/2019/07/02/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-NSUUID-CFUUID-%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    <id>http://p709723778.gitee.io/2019/07/02/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-NSUUID-CFUUID-%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%AC%A6/</id>
    <published>2019-07-02T15:50:09.000Z</published>
    <updated>2021-09-11T10:24:25.152Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;CFUUID&quot;&gt;&lt;a href=&quot;#CFUUID&quot; class=&quot;headerlink&quot; title=&quot;CFUUID&quot;&gt;&lt;/a&gt;CFUUID&lt;/h3&gt;&lt;p&gt;从iOS2.0开始，&lt;code&gt;CFUUID&lt;/code&gt;就已经出现了。它是&lt;strong&gt;CoreFoundatio&lt;/strong&gt;包的一部分，因此API属于C语言风格。CFUUIDCreate 方法用来创建CFUUIDRef，并且可以获得一个相应的NSString字符串&lt;/p&gt;
&lt;p&gt;如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;CFUUIDRef&lt;/span&gt; cfuuid = &lt;span class=&quot;built_in&quot;&gt;CFUUIDCreate&lt;/span&gt;(kCFAllocatorDefault);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *cfuuidString = (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*)&lt;span class=&quot;built_in&quot;&gt;CFBridgingRelease&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;CFUUIDCreateString&lt;/span&gt;(kCFAllocatorDefault, cfuuid));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;CFRelease&lt;/span&gt;(cfuuid);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;获得的这个CFUUID值系统并没有存储。每次调用CFUUIDCreate，系统都会返回一个新的唯一标示符。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="UUID" scheme="http://p709723778.gitee.io/tags/UUID/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ IDFA唯一标识符 (二)</title>
    <link href="http://p709723778.gitee.io/2019/07/01/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-IDFA%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%AC%A6-%E4%BA%8C/"/>
    <id>http://p709723778.gitee.io/2019/07/01/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-IDFA%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%AC%A6-%E4%BA%8C/</id>
    <published>2019-07-01T15:45:02.000Z</published>
    <updated>2021-09-11T10:24:25.148Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在此浅谈一下App再提交AppStore的时候,需要选择你的应用是否用到了IDFA,用到IDFA的场景是哪一种?下面来描述一下.此文也有参考别人的博客!&lt;/p&gt;
&lt;img src=&quot;/2019/07/01/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-IDFA%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%AC%A6-%E4%BA%8C/%E6%88%AA%E5%9B%BE1.png&quot; class=&quot;&quot; title=&quot;预览效果&quot;&gt;

&lt;p&gt;以上4项代表的含义：&lt;/p&gt;
&lt;h3 id=&quot;1-在-App-内投放广告&quot;&gt;&lt;a href=&quot;#1-在-App-内投放广告&quot; class=&quot;headerlink&quot; title=&quot;1. 在 App 内投放广告&quot;&gt;&lt;/a&gt;1. 在 App 内投放广告&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;服务应用中的广告。如果你的应用中集成了广告的时候，你需要勾选这一项。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
      <category term="IDFA" scheme="http://p709723778.gitee.io/tags/IDFA/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ IDFA唯一标识符 (一)</title>
    <link href="http://p709723778.gitee.io/2019/06/24/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-IDFA%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%AC%A6-%E4%B8%80/"/>
    <id>http://p709723778.gitee.io/2019/06/24/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-IDFA%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%AC%A6-%E4%B8%80/</id>
    <published>2019-06-24T20:50:14.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;通过网上查资料看,我发现有一部分人使用IDFA用来做设备唯一标识,我个人觉的不是很好!有很大的缺陷,为什么呢?下面来详细解说&lt;/p&gt;
&lt;p&gt;要使用IDFA首先要导入系统库 &lt;code&gt;@import AdSupport;&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;readonly&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSUUID&lt;/span&gt; *advertisingIdentifier;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;IDFA是每个设备特有的字母数字串，仅用于服务广告。(官方解释)&lt;br&gt;&lt;br&gt;可以理解为广告标识符，在同一个设备上的所有App都会取到相同的值，是苹果专门给各广告提供商用来追踪用户而设的。广告标示符是由系统存储着的。&lt;br&gt;适用于对外：例如广告推广，换量等跨应用的用户追踪等。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
      <category term="IDFA" scheme="http://p709723778.gitee.io/tags/IDFA/"/>
    
  </entry>
  
  <entry>
    <title>Mac ~ 如何在Mac上搭建Web服务器(Apache)</title>
    <link href="http://p709723778.gitee.io/2019/06/21/%E5%A6%82%E4%BD%95%E5%9C%A8Mac%E4%B8%8A%E6%90%AD%E5%BB%BAWeb%E6%9C%8D%E5%8A%A1%E5%99%A8-Apache/"/>
    <id>http://p709723778.gitee.io/2019/06/21/%E5%A6%82%E4%BD%95%E5%9C%A8Mac%E4%B8%8A%E6%90%AD%E5%BB%BAWeb%E6%9C%8D%E5%8A%A1%E5%99%A8-Apache/</id>
    <published>2019-06-21T19:51:26.000Z</published>
    <updated>2021-09-11T10:24:25.152Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;局域网搭建 Web 服务器测试环境,因为Mac OS X 自带了 Apache 和 PHP 环境，我们只需要简单的启动它就行了。惊不惊喜,意不意外!😄&lt;/p&gt;
&lt;h1 id=&quot;1-相关命令&quot;&gt;&lt;a href=&quot;#1-相关命令&quot; class=&quot;headerlink&quot; title=&quot;1.相关命令&quot;&gt;&lt;/a&gt;1.相关命令&lt;/h1&gt;&lt;p&gt;a.启动 Apache 命令 :   &lt;code&gt;sudo apachectl start&lt;/code&gt;&lt;br&gt;b.停止 Apache 命令 :   &lt;code&gt;sudo apachectl stop&lt;/code&gt;&lt;br&gt;c.重启 Apache 命令 :   &lt;code&gt;sudo apachectl restart&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="http://p709723778.gitee.io/categories/Mac/"/>
    
    
      <category term="web服务" scheme="http://p709723778.gitee.io/tags/web%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Mac ~ 如何解决 app已损坏，打不开。你应该将它移到废纸篓</title>
    <link href="http://p709723778.gitee.io/2017/12/11/Mac-%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3-app%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E3%80%82%E4%BD%A0%E5%BA%94%E8%AF%A5%E5%B0%86%E5%AE%83%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93/"/>
    <id>http://p709723778.gitee.io/2017/12/11/Mac-%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3-app%E5%B7%B2%E6%8D%9F%E5%9D%8F%EF%BC%8C%E6%89%93%E4%B8%8D%E5%BC%80%E3%80%82%E4%BD%A0%E5%BA%94%E8%AF%A5%E5%B0%86%E5%AE%83%E7%A7%BB%E5%88%B0%E5%BA%9F%E7%BA%B8%E7%AF%93/</id>
    <published>2017-12-11T16:40:20.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;如遇：「xxx.app已损坏,打不开.你应该将它移到废纸篓」，并非你安装的软件已损坏，而是Mac系统的安全设置问题，因为这些应用都是破解或者汉化的,那么解决方法就是临时改变Mac系统安全设置。&lt;/p&gt;
&lt;p&gt;出现这个问题的解决方法：&lt;/p&gt;
&lt;p&gt;修改系统配置：系统偏好设置 -&amp;gt; 安全性与隐私。修改为任何来源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果没有这个选项的话,打开终端，执行以下对应命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="http://p709723778.gitee.io/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://p709723778.gitee.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ Apple Open Source</title>
    <link href="http://p709723778.gitee.io/2017/09/08/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-Apple-Open-Source/"/>
    <id>http://p709723778.gitee.io/2017/09/08/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-Apple-Open-Source/</id>
    <published>2017-09-08T21:23:22.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;源码下载:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;压缩文件: &lt;a href=&quot;https://opensource.apple.com/tarballs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://opensource.apple.com/tarballs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源代码文件: &lt;a href=&quot;https://opensource.apple.com/source/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://opensource.apple.com/source/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ GCD深度解析</title>
    <link href="http://p709723778.gitee.io/2017/08/19/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-GCD%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/"/>
    <id>http://p709723778.gitee.io/2017/08/19/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-GCD%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90/</id>
    <published>2017-08-19T20:10:41.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-当同步遇到了串行&quot;&gt;&lt;a href=&quot;#1-当同步遇到了串行&quot; class=&quot;headerlink&quot; title=&quot;1.当同步遇到了串行&quot;&gt;&lt;/a&gt;1.当同步遇到了串行&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 任务1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 任务2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 任务3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;控制台输出结果: 1&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
      <category term="GCD" scheme="http://p709723778.gitee.io/tags/GCD/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ Xcode 调试区图标含义</title>
    <link href="http://p709723778.gitee.io/2017/03/26/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-Xcode-%E8%B0%83%E8%AF%95%E5%8C%BA%E5%9B%BE%E6%A0%87%E5%90%AB%E4%B9%89/"/>
    <id>http://p709723778.gitee.io/2017/03/26/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-Xcode-%E8%B0%83%E8%AF%95%E5%8C%BA%E5%9B%BE%E6%A0%87%E5%90%AB%E4%B9%89/</id>
    <published>2017-03-26T15:55:43.000Z</published>
    <updated>2021-09-11T10:24:25.152Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;好奇Xcode调试区域每个字母表示什么含义的同学可以参考一下&lt;br&gt;图片引用自苹果官方文档说明&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/debugging_with_xcode/chapters/debugging_tools.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/debugging_with_xcode/chapters/debugging_tools.html&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;/2017/03/26/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-Xcode-%E8%B0%83%E8%AF%95%E5%8C%BA%E5%9B%BE%E6%A0%87%E5%90%AB%E4%B9%89/%E6%88%AA%E5%9B%BE1.png&quot; class=&quot;&quot; title=&quot;预览效果&quot;&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Xcode" scheme="http://p709723778.gitee.io/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ NSProxy浅说</title>
    <link href="http://p709723778.gitee.io/2016/12/29/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-NSProxy%E6%B5%85%E8%AF%B4/"/>
    <id>http://p709723778.gitee.io/2016/12/29/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-NSProxy%E6%B5%85%E8%AF%B4/</id>
    <published>2016-12-29T18:10:24.000Z</published>
    <updated>2021-09-11T10:24:25.148Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;NSProxy是一个抽象的超类,它遵守了 NSObject
        
      
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ NSTimer 循环引用</title>
    <link href="http://p709723778.gitee.io/2016/12/23/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-NSTimer-%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8/"/>
    <id>http://p709723778.gitee.io/2016/12/23/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-NSTimer-%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8/</id>
    <published>2016-12-23T18:10:24.000Z</published>
    <updated>2021-09-11T10:24:25.148Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1. 概述&quot;&gt;&lt;/a&gt;1. 概述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在使用NSTimer，如果使用不得当特别会引起循环引用，造成内存泄露。所以怎么避免循环引用问题，下面我提出几种解决NSTimer的几种循环引用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在iOS中，NSTimer的使用是非常频繁的，但是NSTimer在使用中需要注意，避免循环引用的问题。之前经常这样写&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setupTimer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.timer = [&lt;span class=&quot;built_in&quot;&gt;NSTimer&lt;/span&gt; scheduledTimerWithTimeInterval:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; target:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; selector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(timerAction) userInfo:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; repeats:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)dealloc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.timer invalidate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.timer = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由于self强引用了timer，同时timer也强引用了self，所以循环引用造成dealloc方法根本不会走，self和timer都不会被释放，造成内存泄漏。&lt;/p&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发之 ~ 循环引用</title>
    <link href="http://p709723778.gitee.io/2016/12/11/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8/"/>
    <id>http://p709723778.gitee.io/2016/12/11/iOS%E5%BC%80%E5%8F%91%E4%B9%8B-%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8/</id>
    <published>2016-12-11T11:32:51.000Z</published>
    <updated>2021-09-11T10:24:25.152Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1. 概述&quot;&gt;&lt;/a&gt;1. 概述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;iOS内存中的分区有：堆、栈、静态区。其中，栈和静态区是操作系统自己管理回收，不会造成循环引用。在堆中的相互引用无法回收，有可能造成循环引用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;循环引用的实质：多个对象相互之间有强引用，不能施放让系统回收。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解决循环引用一般是将 strong 引用改为 weak 引用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://p709723778.gitee.io/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://p709723778.gitee.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Sourcetree ~ 不停的提示 password required</title>
    <link href="http://p709723778.gitee.io/2015/03/25/Sourcetree-password-required/"/>
    <id>http://p709723778.gitee.io/2015/03/25/Sourcetree-password-required/</id>
    <published>2015-03-25T15:26:53.000Z</published>
    <updated>2021-09-11T10:24:25.144Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;br/&gt;

&lt;blockquote&gt;
&lt;p&gt;问题: Sourcetree 不停的让输入密码，报 password
        
      
    
    </summary>
    
    
      <category term="开发工具" scheme="http://p709723778.gitee.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Sourcetree" scheme="http://p709723778.gitee.io/tags/Sourcetree/"/>
    
  </entry>
  
</feed>
